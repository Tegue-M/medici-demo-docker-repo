name: Nginx Deployment

on:
  push:
    branches:
      - main 

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      TAG: ${{ github.sha }}  # Set the Docker tag to the current commit SHA

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Build Docker image and set Docker tag with TAG
      run: |
        echo "Generated Docker tag: $TAG"
        docker build -t "${{ secrets.REPOSITORY_NAME }}" .
        docker tag "${{ secrets.REPOSITORY_NAME }}" "${{ secrets.AWS_REGISTRY_URL }}/${{ secrets.REPOSITORY_NAME }}:${TAG}"

    - name: Debug Environment Variables
      run: |
        echo "AWS_REGISTRY_URL: ${{ secrets.AWS_REGISTRY_URL }}"
        echo "Generated Docker tag:  $TAG"

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-1

    - name: Push Docker image to Amazon ECR
      run: |
        aws ecr get-login-password --region eu-west-1 | docker login --username AWS --password-stdin ${{ secrets.AWS_REGISTRY_URL }}
        docker push "${{ secrets.AWS_REGISTRY_URL }}/${{ secrets.REPOSITORY_NAME }}:${TAG}"

    - name: SSH into EC2 instance and deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
        envs: |
          TAG=${TAG}
          AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION=eu-west-1
        script: |
          echo "AWS CLI version: $(aws --version)"
          echo "Docker version: $(docker --version)"

          # Stop and remove existing container if it exists
          echo "Stop the current running container if it exists..."
          docker stop nginx_container || true
          echo "Remove the previous container..."
          docker rm nginx_container || true

          # Set AWS credentials for CLI usage
          export AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
          export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
          export AWS_REGION=${AWS_REGION}
          echo "AWS credentials set...."

          # Log in to ECR
          echo "Logging in to ECR...."
          aws ecr get-login-password --region "$AWS_REGION" | docker login --username AWS --password-stdin "${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.$AWS_REGION.amazonaws.com"
          echo "Logged in successfully..."

          # Pull the Docker image from ECR
          echo "Pulling image from ECR..."
          docker pull "${{ secrets.AWS_REGISTRY_URL }}/${{ secrets.REPOSITORY_NAME }}:${TAG}"
          echo "Docker pull completed..."

          # Run the Docker container
          echo "Running the container..."
          docker run -d --name nginx_container "${{ secrets.AWS_REGISTRY_URL }}/${{ secrets.REPOSITORY_NAME }}:${TAG}"
